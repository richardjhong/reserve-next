// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PRICE {
  CHEAP
  REGULAR
  EXPENSIVE
}

model Restaurant {
  id              Int       @id @default(autoincrement())
  name            String
  main_image      String
  images          String[]
  description     String
  open_time       String
  close_time      String
  slug            String    @unique
  price           PRICE
  items           Item[]
  reviews         Review[]
  location_id     Int
  location        Location  @relation(fields: [location_id], references: [id])
  cuisine_id      Int
  cuisine         Cuisine   @relation(fields: [cuisine_id], references: [id])
  bookings        Booking[]
  tables          Table[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
}

model Item {
  id              Int       @id @default(autoincrement())
  price           String
  name            String
  description     String
  restaurant_id   Int
  restaurant      Restaurant @relation(fields: [restaurant_id], references: [id])
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
}

model Location {
  id              Int       @id @default(autoincrement())
  name            String
  restaurants     Restaurant[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt  
}

model Cuisine {
  id              Int       @id @default(autoincrement())
  name            String
  restaurants     Restaurant[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt  
}

model User {
  id              Int       @id @default(autoincrement())
  first_name      String
  last_name       String
  city            String
  email           String    @unique
  phone           String
  password        String
  reviews         Review[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt  
}

model Review {
  id              Int       @id @default(autoincrement())
  first_name      String
  last_name       String
  text            String
  rating          Float
  restaurant_id   Int
  restaurant      Restaurant @relation(fields: [restaurant_id], references: [id])
  user_id         Int
  user            User @relation(fields: [user_id], references: [id])
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt 
}

model Booking {
  id              Int      @id @default(autoincrement())
  num_of_people   Int
  booking_time    DateTime
  bkr_email       String
  bkr_phone       String
  bkr_f_name      String
  bkr_l_name      String
  bkr_occasion    String?  
  bkr_request     String?
  restaurant_id   Int
  restaurant      Restaurant @relation(fields: [restaurant_id], references: [id])
  tables          BookingsOnTable[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt  
}

model Table{
  id              Int      @id @default(autoincrement()) 
  seats           Int
  restaurant_id   Int
  restaurant      Restaurant @relation(fields: [restaurant_id], references: [id])
  bookings        BookingsOnTable[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt  
}

model BookingsOnTable {
  booking_id      Int
  booking         Booking @relation(fields: [booking_id], references: [id])
  table_id        Int
  table           Table @relation(fields: [table_id], references: [id])
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt  

  @@id([booking_id, table_id])
}